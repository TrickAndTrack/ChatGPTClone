package com.audio.service;


import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

@Service
public class AudioToTextService {
    

    private static final String API_URL = "https://aistudio.google.com/app/apikey";

    public String  convertAudioToText(MultipartFile audioFile) {
        String boundary = "----WebKitFormBoundary7MA4YWxkTrZu0gW";
        try {
            // Convert MultipartFile to File
            File tempFile = File.createTempFile("audio", audioFile.getOriginalFilename());
            try (FileOutputStream fos = new FileOutputStream(tempFile)) {
                fos.write(audioFile.getBytes());
            }

            // Set up the HTTP connection
            URL url = new URL(API_URL);
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("POST");
            connection.setRequestProperty("Content-Type", "multipart/form-data; boundary=" + boundary);
            connection.setDoOutput(true);

            try (DataOutputStream request = new DataOutputStream(connection.getOutputStream())) {
                request.writeBytes("--" + boundary + "\r\n");
                request.writeBytes("Content-Disposition: form-data; name=\"file\"; filename=\"" + tempFile.getName() + "\"\r\n");
                request.writeBytes("Content-Type: audio/mpeg\r\n\r\n");  // Adjust MIME type as per your audio file
                request.write(audioFile.getBytes());
                request.writeBytes("\r\n--" + boundary + "--\r\n");
            }

            // Read the response
            BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));
            String inputLine;
            StringBuilder response = new StringBuilder();
            while ((inputLine = in.readLine()) != null) {
                response.append(inputLine);
            }
            in.close();

            return response.toString();

        } catch (Exception e) {
            e.printStackTrace();
            return "Error during audio-to-text conversion";
        }
    }



    @PostMapping("/convert")
    public String convertAudioToTexts(@RequestParam("file") MultipartFile file) {
        return audioToTextService.convertAudioToText(file);
    }
}

